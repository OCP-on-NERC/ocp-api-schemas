{
  "description": "CertificatePolicy is the Schema for the certificatepolicies API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "policy.open-cluster-management.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "CertificatePolicy"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "CertificatePolicySpec defines the desired state of CertificatePolicy",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "allowedSANPattern": {
          "description": "A pattern that must match any defined SAN entries in the certificate for the certificate to be compliant.  Golang's regexp syntax only.",
          "type": [
            "string",
            "null"
          ],
          "minLength": 1
        },
        "disallowedSANPattern": {
          "description": "A pattern that must not match any defined SAN entries in the certificate for the certificate to be compliant. Golang's regexp syntax only.",
          "type": [
            "string",
            "null"
          ],
          "minLength": 1
        },
        "labelSelector": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          }
        },
        "maximumCADuration": {
          "description": "Maximum CA duration for a signing certificate, longer duration is considered non-compliant. Golang's time units only.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "maximumDuration": {
          "description": "Maximum duration for a certificate, longer duration is considered non-compliant. Golang's time units only.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "minimumCADuration": {
          "description": "Minimum CA duration before a signing certificate expires that it is considered non-compliant. Golang's time units only.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "minimumDuration": {
          "description": "Minimum duration before a certificate expires that it is considered non-compliant. Golang's time units only.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "namespaceSelector": {
          "description": "'namespaceSelector' defines the list of namespaces to include/exclude for objects defined in spec.objectTemplates. All selector rules are ANDed. If 'include' is not provided but 'matchLabels' and/or 'matchExpressions' are, 'include' will behave as if ['*'] were given. If 'matchExpressions' and 'matchLabels' are both not provided, 'include' must be provided to retrieve namespaces.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "exclude": {
              "description": "'exclude' is an array of filepath expressions to exclude objects by name.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              }
            },
            "include": {
              "description": "'include' is an array of filepath expressions to include objects by name.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              }
            },
            "matchExpressions": {
              "description": "'matchExpressions' is an array of label selector requirements matching objects by label.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "'matchLabels' is a map of {key,value} pairs matching objects by label.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "remediationAction": {
          "description": "enforce, inform",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Inform",
            "inform",
            "Enforce",
            "enforce"
          ]
        },
        "severity": {
          "description": "low, medium, high, or critical",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "low",
            "Low",
            "medium",
            "Medium",
            "high",
            "High",
            "critical",
            "Critical"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CertificatePolicyStatus defines the observed state of CertificatePolicy",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "compliancyDetails": {
          "description": "map of namespaces to its compliancy details",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "CompliancyDetails defines the all the details related to whether or not the policy is compliant",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "nonCompliantCertificates": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "nonCompliantCertificatesList": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "description": "Cert contains its related secret and when it expires",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ca": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "duration": {
                      "description": "A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "expiration": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "expiry": {
                      "description": "A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "sans": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "secretName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "compliant": {
          "description": "Compliant, NonCompliant, UnknownCompliancy",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "policy.open-cluster-management.io",
      "kind": "CertificatePolicy",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}